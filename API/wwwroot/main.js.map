{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/_directives/has-role.directive.ts","./src/app/_forms/date-input/date-input.component.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/_forms/text-input/text-input.component.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/_guards/admin.guard.ts","./src/app/_guards/auth.guard.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/_models/likeParams.ts","./src/app/_models/pagination.ts","./src/app/_models/userParams.ts","./src/app/_modules/shared.module.ts","./src/app/_resolvers/member.detailed.resolver.ts","./src/app/_services/account.service.ts","./src/app/_services/busy.service.ts","./src/app/_services/confirm.service.ts","./src/app/_services/loading.interceptor.ts","./src/app/_services/members.service.ts","./src/app/_services/message.service.ts","./src/app/_services/paginationHelper.ts","./src/app/_services/presence.service.ts","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/admin/admin.service.ts","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/errors/server-error/server-error.component.ts","./src/app/errors/server-error/server-error.component.html","./src/app/errors/test-erros/test-erros.component.ts","./src/app/errors/test-erros/test-erros.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { AccountService } from './../_services/account.service';\nimport { Directive, Input, TemplateRef, ViewContainerRef, OnInit } from '@angular/core';\nimport { User } from '../_models/user';\nimport { take } from 'rxjs/operators';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Directive({\n  selector: '[HasRole]' // *HasReole='Admin'\n})\nexport class HasRoleDirective implements OnInit {\n  @Input() HasRole: String[];\n\n  user: User;\n\n  constructor(private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private accountService: AccountService) {\n\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = user;\n    })\n  }\n  ngOnInit() {\n    if (!this.user?.roles || this.user == null) {\n      this.viewContainerRef.clear();\n      return;\n    }\n     if(this.user?.roles.some(r => this.HasRole.includes(r))){\n       this.viewContainerRef.createEmbeddedView(this.templateRef);\n     }else{this.viewContainerRef.clear();}\n  }\n\n}\n","import { Component, Input,Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\n\n@Component({\n  selector: 'date-input',\n  templateUrl: './date-input.component.html',\n  styleUrls: ['./date-input.component.css']\n})\nexport class DateInputComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() maxDate: Date;\n   // Partial means every single property inside BsDatepickerConfig is optional, \n   //no need to provide every single property configuration, else we have to \n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(@Self() public ngControl: NgControl) { \n    this.ngControl.valueAccessor = this;\n    this.bsConfig={\n      containerClass:'theme-red',\n      dateInputFormat: 'DD MMMM YYYY'\n    }\n  } \n\n  writeValue(obj: any): void {\n    \n  }\n  registerOnChange(fn: any): void {\n    \n  }\n  registerOnTouched(fn: any): void {\n    \n  }\n\n}\n","<div class=\"form-group\">\n    <input type=\"text\"\n       [class.is-invalid]='ngControl.touched && ngControl.invalid'\n       class=\"form-control\"\n        [formControl]='ngControl.control'\n        placeholder=\"{{label}}\"\n        bsDatepicker\n        [bsConfig]=\"bsConfig\"\n        [maxDate]=\"maxDate\"\n    >\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">{{label}} is required</div>\n</div>\n","import { Component, OnInit, Input, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.css']\n})\nexport class TextInputComponent implements ControlValueAccessor {\n @Input() label: string;\n @Input() type = 'text';\n  \n constructor(@Self() public ngControl: NgControl) {\n   this.ngControl.valueAccessor = this;\n  }\n\n  writeValue(obj: any): void {\n    \n  }\n  \n  registerOnChange(fn: any): void {\n    \n  }\n  \n  registerOnTouched(fn: any): void {\n    \n  }\n\n}\n","<div class=\"form-group\">\n    <input [class.is-invalid]='ngControl.touched && ngControl.invalid' type=\"password\" \n      class=\"form-control\"\n      type={{type}} \n      [formControl]=\"ngControl.control\" \n      placeholder={{label}}>\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">\n        Please enter {{label}}</div>\n    <div *ngIf=\"ngControl.control.errors?.minlength\" class=\"invalid-feedback\">\n        {{label}} must be at least {{ngControl.control.errors.minlength['requiredLength']}}</div>\n    <div *ngIf=\"ngControl.control.errors?.maxlength\" class=\"invalid-feedback\">\n        {{label}} must be at most {{ngControl.control.errors.maxlength['requiredLength']}}</div>\n    <div *ngIf=\"ngControl.control.errors?.isMatching\" class=\"invalid-feedback\">\n        Password does not match</div>\n\n\n</div>","import { map } from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from './../_services/account.service';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private accountService: AccountService,private  toastr: ToastrService){\n\n  }\n  canActivate(): Observable<boolean>  {\n    return this.accountService.currentUser$.pipe(\n      map(user =>{\n          if(user.roles.includes('Admin') || user.roles.includes('Moderator')){\n            return true;\n          }\n          this.toastr.error('You can not enter this area')\n      })\n    )\n    \n  }\n  \n}\n","import { AccountService } from './../_services/account.service';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ToastrService } from 'ngx-toastr';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private accountService: AccountService,private toastr: ToastrService)\n  {}\n\n  canActivate():Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        if(user) return true;\n        this.toastr.error('You shall not pass!');\n      })\n    )\n  }\n  \n}\n","import { MemberEditComponent } from './../members/member-edit/member-edit.component';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ConfirmService } from '../_services/confirm.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n//CanDeactivate helps to promt confirmation message, when you try to exit\n//perticular component without any save changes\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\n\n  constructor(private confirmService: ConfirmService){\n\n  }\n  canDeactivate(\n    component: MemberEditComponent): Observable<boolean> | boolean {\n      if(component?.editForm?.dirty){\n        return this.confirmService.confirm();\n      }\n    return true;\n  }\n  \n}\n","import { ToastrService } from 'ngx-toastr';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { NavigationExtras, Router } from '@angular/router';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router, private toastr: ToastrService) { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    return next.handle(request).pipe(\n      catchError(error => {\n        if (error) {\n          switch (error.status) {\n            case 400:\n              if (error.error.errors) {//bad request validation error\n                const modelStateErrors = [];\n                for (const key in error.error.errors) {\n                  if (error.error.errors[key]) {\n                    modelStateErrors.push(error.error.errors[key])\n                  }\n                }\n                throw modelStateErrors.flat();                \n              } else if(typeof(error.error) === 'object') { //bad request error as object(no msg pass)\n                this.toastr.error(error.error.title,error.error.status)\n              } else{\n                this.toastr.error(error.error, error.status); // bad request error string(pass msg)\n              }\n              break;\n            case 401: this.toastr.error(error.error,error.status);\n              break;\n            case 404: this.router.navigateByUrl('/not-found')\n              break;\n            case 500:\n              const navigationExras: NavigationExtras = { state: { error: error.error } }\n              this.router.navigateByUrl('/server-error', navigationExras);\n              break;\n            default: this.toastr.error('Something unexpected went wrong');\n              console.log(error);\n              break;\n          }\n        }\n        return throwError(error);\n      })\n    )\n  }\n}\n","import { AccountService } from './../_services/account.service';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private accountService : AccountService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let currentUser: User;\n\n    //Note :here * pipe(take(1)) * is used to auto unsubscribe observable once taks done\n    /// similar like async pipe ( | aync) in html\n    \n    //clone() helps to add additonal propety,object while preparing des obj from source\n    \n    this.accountService.currentUser$.pipe(take(1)).subscribe(user=> currentUser = user);\n    if(currentUser){\n      request = request.clone({\n        setHeaders:{\n          Authorization: `Bearer ${currentUser.token}`\n        }\n      })\n    }\n    return next.handle(request);\n  }\n}\n","import { User } from \"./user\";\r\n\r\nexport class LikeParams {\r\n    predicate = 'liked';\r\n    pageNumber = 1;\r\n    pageSize = 2;\r\n}\r\n","export interface Pagination{\r\n    currentPage: number;\r\n    itemPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T>{    \r\n    result: T;\r\n    pagination: Pagination;\r\n}","import { User } from \"./user\";\r\n\r\nexport class UserParams {    \r\n    minAge = 18;\r\n    maxAge = 99;\r\n    gender: string;\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    orderBy = 'lastActive';\r\n    constructor(user: User) {\r\n        this.gender = user.gender === 'female' ? 'male' : 'female';\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ToastrModule } from 'ngx-toastr';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TimeagoModule } from 'ngx-timeago';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n///BsDatepickerModule.forRoot() :\n// here forRoot() used to inject particular module globally in application\n// basically its need when we used anyof ngx-bootstrap module\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,    \n    BsDropdownModule.forRoot(),\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right'\n    }),\n    TabsModule.forRoot(),\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule.forRoot(),\n    PaginationModule.forRoot(),\n    ButtonsModule.forRoot(),\n    TimeagoModule.forRoot(), \n    ModalModule.forRoot()   \n  ],\n  exports:[\n    BsDropdownModule,\n    ToastrModule,\n    TabsModule,\n    NgxGalleryModule,\n    FileUploadModule,\n    BsDatepickerModule,\n    PaginationModule,\n    ButtonsModule,\n    TimeagoModule,\n    ModalModule\n  ]\n})\nexport class SharedModule { }\n","import { MembersService } from 'src/app/_services/members.service';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Member } from 'src/app/_models/member';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MemberDetailedResolver implements Resolve<Member>{\r\n    constructor(private membersService: MembersService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Member>  {\r\n       return this.membersService.getMember(route.paramMap.get('username'));\r\n    }\r\n\r\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\nimport { PresenceService } from './presence.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  baseUrl = environment.apiUrl;\n\n  //ReplaySubject stores last set Object value\n  private currentUserSource = new ReplaySubject<User>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(private http: HttpClient,\n              private  presence: PresenceService) { }\n\n  login(model: any) {\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\n      map((response: User) => {\n        const user = response;\n        if (user) {          \n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);          \n        }\n      })\n    )\n  }\n\n  register(model: any) {\n    return this.http.post(this.baseUrl + 'account/register', model).pipe(\n      map((user: User) => {\n        if (user) {\n          this.setCurrentUser(user);\n          this.presence.createHubConnection(user);     \n        }\n      })\n    )\n  }\n\n  setCurrentUser(user: User) {\n    user.roles =[];\n    const roles = this.getDecodedToken(user.token).role;\n    Array.isArray(roles)? user.roles = roles : user.roles.push(roles);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n    this.presence.stopHubConnection();\n  }\n\n  getDecodedToken(token)\n  {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BusyService {\n  busyRequestCount = 0;\n\n  constructor(private spinnerService: NgxSpinnerService) {    \n   }\n\n  busy(){\n    this.busyRequestCount++;\n    this.spinnerService.show(undefined,{\n      // type:'la-ball-spin-clockwise-fade-rotating',\n      // bdColor:'rgba(255,255,255,0)',\n      // color:'#333333'\n      bdColor:\"rgba(51,51,51,0.8)\",\n      size:\"medium\",\n      color:\"#fff\",\n     // type:\"ball-atom\"\n      type:\"ball-spin-clockwise-fade-rotating\"\n    })\n  }\n\n  idle(){    \n    this.busyRequestCount--;\n    if(this.busyRequestCount <= 0){\n      this.busyRequestCount = 0;\n      this.spinnerService.hide();\n    }\n  }\n}\n","import { retry } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Component, OnInit } from '@angular/core';\nimport { ConfirmDialogComponent } from 'src/app/modals/confirm-dialog/confirm-dialog.component';\nimport { observable, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfirmService {\n  bsModalRef: BsModalRef\n  constructor(private modelService: BsModalService) { }\n\n  confirm(title = 'Confirmation', message = 'Are you sure want to do this?',\n    btnOktext = 'OK',\n    btnCancelText = 'Cancel'): Observable<boolean> {\n    const config = {\n      initialState: {\n        title,\n        message,\n        btnOktext,\n        btnCancelText,\n      }\n    }\n    this.bsModalRef = this.modelService.show(ConfirmDialogComponent, config);\n    return new Observable<boolean>(this.getResult());\n  }\n\n  private getResult() {\n    return (observer) => {\n      const subscription = this.bsModalRef.onHidden.subscribe(() => {\n        observer.next(this.bsModalRef.content.result);\n        observer.complete();\n      });\n\n      return {\n        unsubscribe() {\n          subscription.unsubscribe();\n        }\n      }\n    }\n\n  }\n\n}\n","import { BusyService } from './busy.service';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { delay,finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingInterceptor implements HttpInterceptor {\n\n  constructor(private busyService: BusyService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    this.busyService.busy();  \n    return next.handle(request).pipe(\n      //delay(1000),\n      finalize(()=>{\n          this.busyService.idle();\n      })\n    )\n  }\n}\n","import { LikeParams } from './../_models/likeParams';\nimport { AccountService } from './account.service';\nimport { UserParams } from './../_models/userParams';\nimport { PaginatedResult } from '../_models/pagination';\nimport { Injectable } from '@angular/core';\nimport { environment } from './../../environments/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Member } from 'src/app/_models/member';\nimport { of } from 'rxjs';\nimport { map, finalize, take, retry } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class MembersService {\n\n  baseUrl = environment.apiUrl;\n  members: Member[];\n  user: User;\n  userParams: UserParams;\n\n  //here map is the type of dictionary which stores <key, value> pair\n  memeberCache = new Map();\n\n\n  constructor(private http: HttpClient, private accountService: AccountService) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = user;\n      this.userParams = new UserParams(user);\n    })\n  }\n\n  getUserParams() {\n    return this.userParams;\n  }\n\n  resetUserParams() {\n    this.userParams = new UserParams(this.user);\n    return this.userParams;\n  }\n\n  setUserParams(userParams: UserParams) {\n    this.userParams = userParams;\n  }\n\n  getMembers(userParams: UserParams) {\n    let key = Object.values(userParams).join('-')\n    var response = this.memeberCache.get(key);\n    if (response) {\n      return of(response);\n    }\n\n\n    let params = getPaginationHeaders(userParams.pageNumber, userParams.pageSize)\n\n    params = params.append('minAge', userParams.minAge.toString());\n    params = params.append('maxAge', userParams.maxAge.toString());\n    params = params.append('gender', userParams.gender);\n    params = params.append('orderBy', userParams.orderBy);\n\n    return getPaginatedResult<Member[]>(this.baseUrl + 'users', params,this.http)\n      .pipe(map(response => {\n        this.memeberCache.set(key, response);\n        return response;\n      }))\n  }\n\n  //...   => sperad operator here used to covert dictionary to array\n  //reduce => used to accumulate all the number array result into one result\n  getMember(username: string) {\n    const member = [...this.memeberCache.values()]\n      .reduce((arr, elem) => arr.concat(elem.result), [])\n      .find((user: Member) => user.username == username);\n    if (member) {\n      return of(member);\n    }\n    return this.http.get<Member>(this.baseUrl + 'users/' + username);\n  }\n\n  updateMember(member: Member) {\n    return this.http.put(this.baseUrl + 'users', member).pipe(\n      map(() => {\n        const index = this.members.indexOf(member);\n        this.members[index] = member;\n      })\n    )\n  }\n\n  setMainPhoto(photoId: number) {\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\n  }\n\n  deletePhoto(photoId: number) {\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);\n  }\n\n  addLike(username: string) {\n    return this.http.post(this.baseUrl + 'likes/' + username, {});\n  }\n\n  getLikes(likeParams:LikeParams) {\n    let params = getPaginationHeaders(likeParams.pageNumber, likeParams.pageSize);\n    params = params.append('predicate', likeParams.predicate);\n    return getPaginatedResult<Partial<Member[]>>(this.baseUrl + 'likes',params,this.http);\n  }\n  \n}\n","import { BusyService } from './busy.service';\r\nimport { Message } from './../_models/message';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { getPaginatedResult, getPaginationHeaders } from './paginationHelper';\r\nimport { User } from '../_models/user';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take, finalize } from 'rxjs/operators';\r\nimport { group } from 'console';\r\nimport { Group } from '../_models/group';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n  baseUrl = environment.apiUrl;\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection: HubConnection;\r\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\r\n  messageThread$ = this.messageThreadSource.asObservable();\r\n\r\n  constructor(private http: HttpClient, private busyService: BusyService) { }\r\n\r\n  createHubConnection(user: User, otherUsername: string) {\r\n    this.busyService.busy();\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'message?user=' + otherUsername, {\r\n        accessTokenFactory: () => user.token\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build()\r\n\r\n    this.hubConnection.start()\r\n        .catch(error => console.log(error))\r\n        .finally(()=> this.busyService.idle());\r\n\r\n    this.hubConnection.on(\"ReceiveMessageThread\", messages => {\r\n      this.messageThreadSource.next(messages);\r\n    });\r\n\r\n    this.hubConnection.on('NewMessage', message => {\r\n      this.messageThread$.pipe(take(1)).subscribe(messages => {\r\n        this.messageThreadSource.next([...messages, message])\r\n      })\r\n    })\r\n\r\n    this.hubConnection.on(\"UpdatedGroup\", (group: Group) => {\r\n      if (group.connections.some(x => x.username === otherUsername)) {\r\n        this.messageThread$.pipe(take(1)).subscribe(messages => {\r\n          messages.forEach(message => {\r\n            if(!message.dateRead){\r\n              message.dateRead = new Date(Date.now())\r\n            }\r\n          })\r\n          this.messageThreadSource.next([...messages]);\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  stopHubConnection() {\r\n    if (this.hubConnection)\r\n      this.messageThreadSource.next([]);\r\n      this.hubConnection.stop();\r\n  }\r\n\r\n  getMessages(pageNumber, pageSize, container) {\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('Container', container);\r\n    return getPaginatedResult<Message[]>(this.baseUrl + 'messages', params, this.http);\r\n  }\r\n\r\n  getMessageThread(username: string) {\r\n    return this.http.get<Message[]>(this.baseUrl + 'messages/thread/' + username);\r\n  }\r\n\r\n  async sendMessage(username: string, content: string) {\r\n    return this.hubConnection.invoke('SendMessage', { recipientUsername: username, content })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    return this.http.delete(this.baseUrl + 'messages/' + id);\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map } from \"rxjs/operators\";\r\nimport { PaginatedResult } from \"../_models/pagination\";\r\n\r\nexport function getPaginatedResult<T>(url, params, http: HttpClient) {\r\n    const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n\r\n    ///{ observe:'response', params} : here we are passing \"header param\" for pagination details     \r\n    return http.get<T>(url, { observe: 'response', params }).pipe(\r\n      map(response => {\r\n        paginatedResult.result = response.body;\r\n        if (response.headers.get('Pagination') !== null) {\r\n          paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\r\n        }\r\n        return paginatedResult;\r\n      })\r\n    );\r\n  }\r\n\r\n  export function getPaginationHeaders(pageNumber: number, pageSize: number) {\r\n    let params = new HttpParams();\r\n    params = params.append('pageNumber', pageNumber.toString());\r\n    params = params.append('pageSize', pageSize.toString());\r\n\r\n    return params;\r\n  }","import { Router, NavigationExtras } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { environment } from 'src/environments/environment';\nimport { Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { User } from '../_models/user';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PresenceService {\n  hubUrl = environment.hubUrl;\n  private hubConnection: HubConnection;\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\n  onlineUsers$ = this.onlineUsersSource.asObservable()\n\n  constructor(private toastr: ToastrService, private router: Router) { }\n\n  createHubConnection(user: User){\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'presence',{\n        accessTokenFactory: () => user.token\n      })\n      .withAutomaticReconnect()\n      .build()\n\n      this.hubConnection\n        .start()\n        .catch(error => console.log(error));\n\n      this.hubConnection.on('UserIsOnline', username => {\n        this.onlineUsers$.pipe(take(1)).subscribe(usernames =>{\n          this.onlineUsersSource.next([...usernames, username]);\n        })\n      })\n\n      this.hubConnection.on('UserIsOffline', username=>{\n        this.onlineUsers$.pipe(take(1)).subscribe(usernames =>{\n          this.onlineUsersSource.next([...usernames.filter(x=> x!=username)]);\n        })\n      })\n\n      this.hubConnection.on('GetOnlineUsers', (usernames:string[])=> {\n        this.onlineUsersSource.next(usernames);\n      })      \n      \n      this.hubConnection.on(\"NewMessageReceived\",({username, KnownAs})=>{\n        console.log(username + ' has send you a new message!')\n        this.toastr.info(username + 'has send you a new message!')\n            .onTap\n            .pipe(take(1))\n            .subscribe(()=> this.router.navigateByUrl('/members/'+ username + '?tab=3'))\n      })\n  }\n\n  stopHubConnection(){\n    this.hubConnection.stop().catch(error=> console.log(error));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Admin Panel</h2>\n<div class=\"tab-panel\">\n    <tabset class=\"member-tabset\">\n        <tab heading='User management' *HasRole='[\"Admin\"]'>\n            <div class=\"contianer\">\n                 <app-user-management></app-user-management>\n            </div>\n        </tab> <tab heading='Photo management' *HasRole='[\"Admin\"]'>\n            <div class=\"contianer\">\n                 <app-photo-management></app-photo-management>\n            </div>\n        </tab>\n    </tabset>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Injectable } from '@angular/core';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n  baseUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) { }\n\n  getUserWithRoles(){\n    return this.http.get<Partial<User[]>>(this.baseUrl + 'admin/users-with-roles');\n  }\n\n  updateUserRoles(username:string, roles:string[]){\n    return this.http.post(this.baseUrl + 'admin/edit-roles/' +username + '?roles=' + roles,{});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css']\n})\nexport class PhotoManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>photo-management works!</p>\n","import { ToastrService } from 'ngx-toastr';\nimport { AdminService } from './../admin.service';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/_models/user';\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n  users: Partial<User[]>;\n  bsModalRef: BsModalRef;\n\n  constructor(private adminService: AdminService,\n    private modalService: BsModalService,\n    private toast: ToastrService) { }\n\n  ngOnInit() {\n    this.getUsersWithRoles();\n  }\n\n\n\n  getUsersWithRoles() {\n    this.adminService.getUserWithRoles().subscribe(users => {\n      this.users = users;\n    })\n  }\n\n  openRolesModal(user: User) {\n    const config: ModalOptions = {\n      class: 'model-dialog-centered',\n      initialState: {\n        user,\n        roles : this.getRolesArray(user)\n      }\n    }\n\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\n    this.bsModalRef.content.updateSelectedRoles.subscribe(values =>{     \n      const rolesToupdate = {\n        roles: [...values.filter(el=> el.checked === true).map(el => el.name)]\n      };\n      if(rolesToupdate && rolesToupdate.roles.length > 0){\n        this.adminService.updateUserRoles(user.username, rolesToupdate.roles).subscribe(()=>{\n          user.roles = [...rolesToupdate.roles]\n        })\n      }else { this.toast.info(\"Please select role..!!\",\"Update Roles\") }\n    })\n  }\n\n  private getRolesArray(user) {\n    const roles = [];\n    const userRoles = user.roles;\n    const avaialableRoles: any[] = [\n      { name: 'Admin', value: 'Admin' },\n      { name: 'Moderator', value: 'Moderator' },\n      { name: 'Member', value: 'Member' }\n    ];\n\n    avaialableRoles.forEach(role => {\n      let isMatch = false;\n      for (const userRole of userRoles) {\n        if (role.name === userRole) {\n          isMatch = true;\n          role.checked = true;\n          roles.push(role);\n          break;\n        }\n      }\n      if (!isMatch) {\n        role.checked = false;\n        roles.push(role);\n      }\n    })\n    return roles;\n  }\n}\n","<div class=\"row\">\n    <table class=\"table\">\n        <tr>\n            <th style=\"width:30%;\">Username</th>\n            <th style=\"width:30%;\">Active roles</th>\n            <th style=\"width: 30%;\"></th>\n        </tr>\n        <tr *ngFor=\"let user of users\">\n            <td>{{user.username}}</td>\n            <td>{{user.roles}}</td>\n            <td><button (click)=\"openRolesModal(user)\"class=\"btn btn-info\" style=\"background-color:#17a2b8\">Edit Reoles</button></td>\n        </tr>\n    </table>\n</div>\n","import { AdminGuard } from './_guards/admin.guard';\nimport { MemberDetailedResolver } from './_resolvers/member.detailed.resolver';\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\nimport { TestErrosComponent } from './errors/test-erros/test-erros.component';\nimport { HomeComponent } from './home/home.component';\nimport { NgModule, Component } from '@angular/core';\nimport { RouterModule, Routes, CanActivate } from '@angular/router';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    canActivate: [AuthGuard],\n    children: [\n      { path: 'members', component: MemberListComponent},\n      { path: 'members/:username', component: MemberDetailComponent, resolve : {member: MemberDetailedResolver}},\n      { path: 'member/:edit', component: MemberEditComponent,canDeactivate:[PreventUnsavedChangesGuard] },\n      { path: 'lists', component: ListsComponent },\n      { path: 'messages', component: MessagesComponent },      \n      { path: 'admin', component: AdminPanelComponent,canActivate:[AdminGuard] }      \n    ]\n  },\n  { path: 'erros', component: TestErrosComponent },\n  { path: 'not-found', component: NotFoundComponent },\n  { path: 'server-error', component: ServerErrorComponent },\n  { path: '**', component: NotFoundComponent, pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { PresenceService } from './_services/presence.service';\nimport { AccountService } from './_services/account.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from './_models/user';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Dating App!';\n  users: any\n\n  constructor(private accountService: AccountService,\n             private  presence: PresenceService) { }\n\n  ngOnInit() {    \n    this.setCurrentUser();\n  }\n\n  setCurrentUser(){\n    const user:User = JSON.parse(localStorage.getItem('user'));   \n    if(user){\n      this.accountService.setCurrentUser(user);\n      this.presence.createHubConnection(user);\n    }\n    \n  }  \n}\n","<ngx-spinner>\r\n    <h3>Loading...</h3>    \r\n</ngx-spinner>\r\n\r\n<app-nav></app-nav>\r\n<div class=\"container\" style=\"margin-top: 100px;\">\r\n    <router-outlet></router-outlet>\r\n</div>","import { JwtInterceptor } from './_interceptors/jwt.interceptor';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavComponent } from './nav/nav.component';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { SharedModule } from './_modules/shared.module';\nimport { TestErrosComponent } from './errors/test-erros/test-erros.component';\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LoadingInterceptor } from './_services/loading.interceptor';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\nimport { HasRoleDirective } from './_directives/has-role.directive';\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\n//import { MembersComponent } from './_services/members/members.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    HomeComponent,\n    RegisterComponent,\n    MemberListComponent,\n    MemberDetailComponent,\n    ListsComponent,\n    MessagesComponent,\n    TestErrosComponent,\n    NotFoundComponent,\n    ServerErrorComponent,\n    MemberCardComponent,\n    MemberEditComponent,\n    PhotoEditorComponent,\n    TextInputComponent,\n    DateInputComponent,\n    MemberMessagesComponent,\n    AdminPanelComponent,\n    HasRoleDirective,\n    UserManagementComponent,\n    PhotoManagementComponent,\n    RolesModalComponent,    \n    ConfirmDialogComponent,\n    //MembersComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    NgxSpinnerModule\n  ],\n  providers: [\n    {provide : HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi:true},\n    {provide : HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi:true},\n    {provide : HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi:true}\n  ],\n  \n  bootstrap: [AppComponent]  \n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <h1>Not found</h1>\n    <button class=\"btn btn-info btn-lg\" routerLink=\"/\">Return to home page</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-server-error',\n  templateUrl: './server-error.component.html',\n  styleUrls: ['./server-error.component.css']\n})\nexport class ServerErrorComponent implements OnInit {\n  error:any;\n\n  constructor(private router: Router) { \n    const navigation = this.router.getCurrentNavigation();\n    this.error = navigation?.extras?.state?.error;        \n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h4>Internal server error- refreshing the page will make the error disappear!</h4>\n<ng-container *ngIf=\"error\">\n    <h5 class=\"text-danger\">Error: {{error.message}} </h5>\n    <p class=\"font-weight-bold\">Note: If you are seeing this then Angular is probably not to blame</p>\n    <p>what to do next?</p>\n    <ol>\n        <li>Open the chrome dev tools</li>\n        <li>Inspect the network tab</li>\n        <li>check the failing request</li>\n        <li>Examine the request URL - make sure it is correct</li>\n        <li>Reproduce the error in postman - if we see the same response, then the issue is not with Angular</li>\n    </ol>\n    <p>Following is the stack trace - this is where your investitgation should start!</p>\n    <code class=\"mt-5\" style=\"background-color: whitesmoke;\">{{error.details}}</code>\n</ng-container>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-test-erros',\n  templateUrl: './test-erros.component.html',\n  styleUrls: ['./test-erros.component.css']\n})\nexport class TestErrosComponent implements OnInit {\n  baseUrl =  environment.apiUrl;\n  validationError :string[] = [];\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  get404Error(){\n    this.http.get(this.baseUrl+ 'buggy/not-found').subscribe(response => {\n      console.log(response);\n    }, error =>{\n      console.log(error);\n    })\n  }\n\n  get400Error(){\n    this.http.get(this.baseUrl+ 'buggy/bad-request').subscribe(response => {\n      console.log(response);\n    }, error =>{\n      console.log(error);\n    })\n  }\n\n  get500Error(){\n    this.http.get(this.baseUrl+ 'buggy/server-error').subscribe(response => {\n      console.log(response);\n    }, error =>{\n      console.log(error);\n    })\n  }\n\n  get401Error(){\n    this.http.get(this.baseUrl+ 'buggy/auth').subscribe(response => {\n      console.log(response);\n    }, error =>{\n      console.log(error);\n    })\n  }\n\n  get400ValidationError(){\n    this.http.post(this.baseUrl+ 'account/register',{}).subscribe(response => {\n      console.log(response);\n    }, error =>{\n      console.log(error);\n      this.validationError = error;\n    })\n  }\n\n}\n","<ng-container>\n    <button (click)=\"get500Error()\" class=\"btn btn-outline primary mr-3\">Test 500 Error</button>\n    <button (click)=\"get400Error()\" class=\"btn btn-outline primary mr-3\">Test 400 Error</button>\n    <button (click)=\"get401Error()\" class=\"btn btn-outline primary mr-3\">Test 401 Error</button>\n    <button (click)=\"get404Error()\" class=\"btn btn-outline primary mr-3\">Test 404 Error</button>\n    <button (click)=\"get400ValidationError()\" class=\"btn btn-outline primary mr-3\">Test 400 Validation Error</button>    \n\n    <div class=\"row mt-5\" *ngIf=\"validationError.length > 0\">\n        <ur class=\"text-danger\">\n            <li *ngFor=\"let error of validationError\"> \n                {{error}}\n            </li>\n        </ur>\n    </div>\n</ng-container>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n  users:any;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  registerToggle(){\n    this.registerMode = !this.registerMode;\n  }\n\n  cancleRegisterMode(event:boolean){\n     this.registerMode = event;\n  }\n}\n","<div class=\"container mt-5\">\n    <div *ngIf=\"!registerMode\" style='text-align: center;'>\n        <h1>Find your match</h1>\n        <p class=\"lead\">Come on it to view your matches.. all you need to do is sign up!</p>\n        <div class=\"text-center\">\n            <button (click)=\"registerToggle()\" class=\"btn btn-primary btn-lg mr-2\">Register</button>\n            <button class=\"btn btn-info btn-lg\">Learn more</button>\n        </div>\n    </div>\n\n    <div *ngIf=\"registerMode\" class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-4\">\n              <app-register (cancelRegister)=\"cancleRegisterMode($event)\"></app-register>\n            </div>\n        </div>\n    </div>\n</div>","import { LikeParams } from './../_models/likeParams';\nimport { Pagination, PaginatedResult } from './../_models/pagination';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Member } from '../_models/member';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  //Here partial means no need to set all properties of Member, used it partially\n  members: Partial<Member[]>;\n  pagination: Pagination;\n  likeParams: LikeParams;\n\n  constructor(private membersService: MembersService) {\n    this.likeParams = new LikeParams();\n   }\n\n  ngOnInit(){\n    this.loadLikes();\n\n  }\n\n  loadLikes()\n  {\n    this.membersService.getLikes(this.likeParams).subscribe(response=>{\n      this.members = response.result;\n      this.pagination = response.pagination;\n    })\n  }\n\n  pageChanged(event:any){\n    this.likeParams.pageNumber = event.page;\n    this.loadLikes();\n  }\n}\n","<div class=\"text-center mt-3\">\n    <h2>{{likeParams.predicate === 'liked'? 'Members I like' : 'Members who like me'}}</h2>\n</div>\n<div class=\"container mt-3\">\n    <div class=\"row\">\n        <div class=\"btn-group\" name=\"predicate\">\n            <button class=\"btn btn-primary col-2\" btnRadio=\"liked\"\n             [(ngModel)]=\"likeParams.predicate\" (click)=\"loadLikes()\">Send Invite</button>\n\n            <button class=\"btn btn-primary col-2\" btnRadio=\"likedBy\" \n            [(ngModel)]=\"likeParams.predicate\" (click)=\"loadLikes()\">Request</button>\n        </div>\n    </div>\n\n    <div class=\"row mt-2\">\n        <div class=\"col-2\" *ngFor=\"let member of members\">\n            <app-member-card [member]=\"member\"></app-member-card>\n        </div>\n    </div>\n</div>\n<!--Pagination-->\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n    <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\n        [(ngModel)]=\"pagination.currentPage\" (pageChanged)=\"pageChanged($event)\" nextText=\"&rsaquo;\" firstText=\"&laquo;\"\n        lastText=\"&raquo;\">\n    </pagination>\n</div>","import { PresenceService } from './../../_services/presence.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Member } from 'src/app/_models/member';\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n@Input() member: Member\n  constructor(private membersService: MembersService,\n               private toastr: ToastrService,\n               public presence: PresenceService) { }\n\n  ngOnInit() {\n  }\n\n  addLike(member: Member){\n    this.membersService.addLike(member.username).subscribe(()=>{\n       this.toastr.success('You have liked '+ member.knownAs);\n    })\n  }\n\n}\n","<div class=\"card mb-4\">\n    <div class=\"card-img-wrapper\">\n        <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top\">\n        <ul class=\"list-inline member-icons animate text-center\">\n            <li class=\"list-inline-item\"><button routerLink=\"/members/{{member.username}}\" class=\"btn-info\">\n                    <i class=\"fa fa-user\"></i></button></li>\n            <li class=\"list-inline-item\" (click)=\"addLike(member)\"><button class=\"btn-info\">\n                    <i class=\"fa fa-heart\"></i></button></li>\n            <li class=\"list-inline-item\"><button class=\"btn-info\"\n                routerLink='/members/{{member.username}}'\n                [queryParams]='{tab:3}'>\n            <i class=\"fa fa-envelope\"></i></button></li>\n        </ul>\n    </div>\n    <div class=\"card-body p-1\">\n        <h6 class=\"card-title text-center mb-1\">\n            <!-- <i class=\"fa fa-user mr-2\"></i> -->\n            <span [class.is-online]=\"(presence.onlineUsers$ | async).includes(member.username)\">\n                <i class=\"fa fa-user mr-2\"></i>               \n            </span>\n           \n            {{member.knownAs}}\n            <span>, </span>{{member.age}}   \n        </h6>\n        <p class=\"card-text text-muted text-center\">{{member.city}}</p>\n    </div>\n</div>","import { AccountService } from './../../_services/account.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { Member } from './../../_models/member';\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgxGalleryAnimation, NgxGalleryImage, NgxGalleryOptions } from '@kolkov/ngx-gallery';\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { Message } from 'src/app/_models/message';\nimport { MessageService } from 'src/app/_services/message.service';\nimport { PresenceService } from 'src/app/_services/presence.service';\nimport { User } from 'src/app/_models/user';\nimport { take } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit,OnDestroy {\n  @ViewChild('memberTabs',{static: true}) memberTabs: TabsetComponent;\n  member: Member\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n  activeTab: TabDirective;\n  messages: Message[] = [];\n  user: User; \n\n\n  constructor(private route: ActivatedRoute, public presence: PresenceService,\n  private messageService: MessageService,private accountService: AccountService,\n  private router: Router)\n  {\n    this.accountService.currentUser$.pipe(take(1))\n    .subscribe(user => this.user = user);\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n  }\n \n   ngOnInit() {\n\n    this.route.data.subscribe(data=>{\n      this.member = data.member;      \n    })\n\n    this.route.queryParams.subscribe(params => {\n      params.tab ? this.selectTab(params.tab) : this.selectTab(0);\n    });\n\n    this.galleryOptions = [{\n      width: '500px',\n      height: '500px',\n      imagePercent: 100,\n      thumbnailsColumns: 4,\n      imageAnimation: NgxGalleryAnimation.Slide,\n      preview: false\n    }]\n\n    this.galleryImages = this.getImages();\n  }\n\n  getImages(): NgxGalleryImage[] {\n    const imageUrls = [];\n    for (const photo of this.member.photos) {\n      imageUrls.push({\n        small: photo?.url,\n        medium: photo?.url,\n        big: photo?.url\n      })\n    }\n    return imageUrls;\n  }  \n\n  loadMessages() {\n    this.messageService.getMessageThread(this.member.username).subscribe(messages => {\n      this.messages = messages;\n    })\n  }\n\n  selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n\n  onTabActive(data: TabDirective) {\n    if (data.heading === 'Messages' && this.messages.length === 0) {\n      this.messageService.createHubConnection(this.user,this.member.username);\n    }else {\n      this.messageService.stopHubConnection();\n    }\n  }\n\n  ngOnDestroy() {\n    this.messageService.stopHubConnection();\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-4\">\n        <div class=\"card\">\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\"\n                class=\"card-img-top img-thumbnail\">\n            <div class=\"card-body\">\n                <div class=\"mb-2\" *ngIf=\"(presence.onlineUsers$ | async).includes(member.username)\">\n                    <i class=\"fa fa-user-circle text-success\"></i>Online now\n                </div>\n                <div>\n                    <strong>Location:</strong>\n                    <p>{{member.city}},{{member.country}}</p>\n                </div>\n                <div>\n                    <strong>Age:</strong>\n                    <p>{{member.age}}</p>\n                </div>\n                <div>\n                    <strong>Location:</strong>\n                    <p>{{member.city}},{{member.country}}</p>\n                </div>\n                <div>\n                    <strong>Last Active:</strong>\n                    <p>{{member.lastActive | timeago }}</p>\n                </div>\n                <div>\n                    <strong>Member since:</strong>\n                    <p>{{member.created | date : 'dd MMM yyyy'}}</p>\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <div class=\"btn-group d-flex\">\n                    <button class=\"btn btn-primary\">Like</button>\n                    <button (click)=\"selectTab(3)\" class=\"btn btn-info\">Message</button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-8\">\n        <tabset class=\"member-tabset\" #memberTabs>\n            <tab heading=\"About {{member.knownAs}}\" (selectTab)=\"onTabActive($event)\">\n                <h4>Description</h4>\n                <p>{{member.introduction}}</p>\n                <h4>Looking for</h4>\n                <P>{{member.lookingFor}}</P>\n            </tab>\n            <tab heading='Interests' (selectTab)=\"onTabActive($event)\">\n                <h4>Interests</h4>\n                <p>{{member.interests}}</p>                \n            </tab>\n            <tab heading='Photos' (selectTab)=\"onTabActive($event)\">\n                <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" \n                class=\"ngx-gallery\"></ngx-gallery>\n            </tab>\n            <tab heading=\"Messages\" (selectTab)=\"onTabActive($event)\">\n               <app-member-messages [username]=\"member.username\"></app-member-messages>\n            </tab>\n        </tabset>\n    </div>\n</div>","import { ToastrService, ToastrModule } from 'ngx-toastr';\nimport { MembersService } from 'src/app/_services/members.service';\nimport { AccountService } from './../../_services/account.service';\nimport { User } from './../../_models/user';\nimport { Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { Member } from 'src/app/_models/member';\nimport { take } from 'rxjs/operators';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm : NgForm\n  member: Member;\n  user: User;\n\n  //HostListener helps to promt confirmation message, when you try to exit by close browser or tab\n  @HostListener('window:beforeunload',['$event']) unloadNotification($event:any){\n    if(this.editForm.dirty){\n      $event.returnValue = true;\n    }\n  }\n\n  constructor(private accountService: AccountService, private membersService: MembersService,\n    private toastr: ToastrService) {\n\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => { this.user = user });\n  }\n\n  ngOnInit() {\n    this.loadMember()\n  }\n\n  loadMember() {\n    this.membersService.getMember(this.user.username).subscribe(member => {\n      this.member = member;\n    })\n  }\n\n  updateMember() {\n    this.membersService.updateMember(this.member).subscribe(()=>{\n    this.toastr.success('Profile updated successfully');\n    this.editForm.reset(this.member);\n  })\n  }\n\n}\n","<div class=\"row\" *ngIf=\"member\">\n    <div class=\"col-4\">\n        <h1>Your profile</h1>\n    </div>\n    <div class=\"col-8\">\n        <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\n            <strong>Information:</strong>You have made change. Any unsaved changes will be lost\n        </div>\n    </div>\n    <div class=\"col-4\">\n        <div class=\"card\">\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\"\n                class=\"card-img-top img-thumbnail\">\n            <div class=\"card-body\">\n                <div>\n                    <strong>Location:</strong>\n                    <p>{{member.city}},{{member.country}}</p>\n                </div>\n                <div>\n                    <strong>Age:</strong>\n                    <p>{{member.age}}</p>\n                </div>\n                <div>\n                    <strong>Location:</strong>\n                    <p>{{member.city}},{{member.country}}</p>\n                </div>\n                <div>\n                    <strong>Last Active:</strong>\n                    <p>{{member.lastActive | timeago}}</p>\n                </div>\n                <div>\n                    <strong>Member since:</strong>\n                    <p>{{member.created | date : 'dd MMM yyy'}}</p>\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <button [disabled]=\"!editForm.dirty\" form=\"editForm\" type=\"submit\" class=\"btn btn-info btn-block\">Save Changes</button>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-8\">\n        <tabset class=\"member-tabset\">\n            <tab heading=\"About {{member.knownAs}}\">\n                <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateMember()\">\n                    <h4>Description</h4>\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.introduction\" name=\"introduction\" rows=\"6\"></textarea>\n                    <h4 class=\"mt-2\">Looking for:</h4>\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.lookingFor\" name=\"lookingFor\" rows=\"6\"></textarea>\n                    <h4 class=\"mt-2\">Interests:</h4>\n                    <textarea class=\"form-control\" [(ngModel)]=\"member.interests\" name=\"interests\" rows=\"6\"></textarea>\n                    <h4 class=\"mt-2\">Location Details: </h4>\n                    <div class=\"form-inline\">\n                        <label for=\"city\">City:</label>\n                        <input class=\"form-control\" [(ngModel)]=\"member.city\" type=\"text\" name=\"city\" class=\"form-control mx-2\">\n                        <label for=\"city\">Country:</label>\n                        <input  class=\"form-control\" [(ngModel)]=\"member.country\" type=\"text\" name=\"country\" class=\"form-control mx-2\">\n                    </div>\n                </form>\n            </tab>\n            <tab heading='Edit Photos'>\n               <app-photo-editor [member]=\"member\"></app-photo-editor>\n            </tab>\n        </tabset>\n    </div>\n</div>","import { User } from './../../_models/user';\nimport { take } from 'rxjs/operators';\nimport { AccountService } from './../../_services/account.service';\nimport { UserParams } from './../../_models/userParams';\nimport { Pagination } from './../../_models/pagination';\nimport { Member } from 'src/app/_models/member';\nimport { Observable } from 'rxjs';\nimport { Component, OnInit } from '@angular/core';\nimport { MembersService } from 'src/app/_services/members.service';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {  \n  members: Member[];\n  pagination: Pagination;\n  userParams: UserParams;\n  user: User;\n  genderList = [{ value: 'male', display: 'Males' }, { value: 'female', display: 'Females' }]\n\n  constructor(private memberService: MembersService) {\n     this.userParams = this.memberService.getUserParams();\n  }\n\n  ngOnInit() {\n    this.loadMembers()\n  }\n\n  loadMembers() {\n    this.memberService.setUserParams(this.userParams);\n    this.memberService.getMembers(this.userParams).subscribe(response => {\n      this.members = response.result;\n      this.pagination = response.pagination;\n    })\n  }\n\n  resetFilters() {\n    this.userParams = this.memberService.resetUserParams();\n    this.loadMembers();\n  }\n\n  pageChanged($event: any) {\n    this.userParams.pageNumber = $event.page;\n    this.memberService.setUserParams(this.userParams);\n    this.loadMembers();\n  }\n\n}\n","<div class=\"text-center mt-3\">\n    <h2>Your have found -{{pagination?.totalItems}} matches</h2>\n</div>\n\n<div class=\"container mt-3\">\n    <form #form=\"ngForm\" class=\"form-inline mb-3\" (ngSubmit)=\"loadMembers()\" autocomplete=\"off\">\n        <div class=\"form-group\">\n            <label>Age from: </label>\n            <input type=\"number\" [(ngModel)]=\"userParams.minAge\" class=\"form-control ml-1\" style=\"width:70px;\"\n                name=\"minAge\">\n        </div>\n\n        <div class=\"form-group px-2\">\n            <label>Age to: </label>\n            <input type=\"number\" [(ngModel)]=\"userParams.maxAge\" class=\"form-control ml-1\" style=\"width:70px;\"\n                name=\"maxAge\">\n        </div>\n\n        <div class=\"form-group px-2\">\n            <label>show:</label>\n            <select name=\"gender\" [(ngModel)]=\"userParams.gender\" style=\"width: 130px;\" class=\"form-control ml-1\">\n                <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\n                    {{gender.display}}\n                </option>\n            </select>\n        </div>\n\n        <button class=\"btn btn-primary ml-1\" type=\"submit\">Apply Filters</button>\n        <button (click)=\"resetFilters()\" class=\"btn btn-info ml-1\" type=\"submit\">Reset Filters</button>\n        <div class=\"col\">\n            <div class=\"btn-group float-right\">\n                <button class=\"btn btn-primary\" btnRadio=\"lastActive\" name=\"orderBy\" type=\"button\"\n                    [(ngModel)]=\"userParams.orderBy\" (click)=\"loadMembers()\">Last Active</button>\n\n                <button class=\"btn btn-primary\" type=\"button\" btnRadio=\"created\" name=\"orderBy\"\n                    [(ngModel)]=\"userParams.orderBy\" (click)=\"loadMembers()\">Newest Members</button>\n            </div>\n        </div>\n    </form>\n\n</div>\n\n<div class=\"row\">\n    <div *ngFor=\"let member of members\" class=\"col-2\">\n        <app-member-card [member]=\"member\"></app-member-card>\n    </div>\n</div>\n\n<!--Pagination-->\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\n    <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\n        [(ngModel)]=\"pagination.currentPage\" (pageChanged)=\"pageChanged($event)\" nextText=\"&rsaquo;\" firstText=\"&laquo;\"\n        lastText=\"&raquo;\">\n    </pagination>\n</div>","import { NgForm } from '@angular/forms';\r\nimport { MessageService } from './../../_services/message.service';\r\nimport { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { Message } from 'src/app/_models/message';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'app-member-messages',\r\n  templateUrl: './member-messages.component.html',\r\n  styleUrls: ['./member-messages.component.css']\r\n})\r\nexport class MemberMessagesComponent implements OnInit { \r\n  @ViewChild('messageForm') messageForm : NgForm;\r\n  //@Input() messages: Message[];  \r\n  @Input() username : string;\r\n  messageContent: string;\r\n  loading = false;\r\n  \r\n  constructor(public messageService: MessageService) { }\r\n\r\n  ngOnInit(){    \r\n  }\r\n  \r\n  sendMessage(){\r\n    this.loading = true;\r\n    this.messageService.sendMessage(this.username,this.messageContent).then(message=>{\r\n      this.messageForm.reset();\r\n    }).finally(()=> this.loading = false);\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"card\">\r\n    <div class=\"card-body\"\r\n        #scrollMe style=\"overflow-y: auto; height: 535px;\"\r\n          [scrollTop]=\"scrollMe.scrollHeight\"    \r\n      >\r\n        <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\r\n            No messages yet.. say hi..!!\r\n        </div>\r\n        <ul  *ngIf=\"(messageService.messageThread$ | async)?.length >0\" class=\"chat\">\r\n            <li *ngFor=\"let message of (messageService.messageThread$ | async)\">\r\n                <div>\r\n                    <span class=\"chat-img float-right\">\r\n                        <img class=\"rounded-circle\" src=\"{{message.senderPhotoUrl || './assets/user.png'}}\" alt=\"\">\r\n                    </span>\r\n                    <div class=\"chat-body\">\r\n                        <div class=\"header\">\r\n                            <small class=\"text-muted\">\r\n                                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\r\n                                <span class=\"text-danger\" *ngIf=\"!message.dateRead \r\n                            && message.senderUsername !== username\">(unread)</span>\r\n                                <span class=\"text-success\" *ngIf=\"message.dateRead \r\n                            && message.senderUsername !== username\">(read {{message.dateRead | timeago}})</span>\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <p>{{message.content}}</p>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <ul class=\"card-footer\">\r\n        <form #messageForm=\"ngForm\" (submit)=\"sendMessage()\" autocomplete=\"off\">\r\n            <div class=\"input-group\">\r\n                <input type=\"text\"\r\n                name=\"messageContent\"\r\n                required\r\n                [(ngModel)]=\"messageContent\"\r\n                 class=\"form-control input-sm\" placeholder=\"Send a private message\">\r\n                <div class=\"input-group-append\">\r\n                    <button [disabled]=\"!messageForm.valid || loading\" class=\"btn-btn-primary\" type=\"submit\">\r\n                        Send <i *ngIf=\"loading\" class=\"fa fa-spinner fa-spin\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </ul>\r\n</div>","import { MembersService } from 'src/app/_services/members.service';\nimport { Photo } from './../../_models/photo';\nimport { AccountService } from './../../_services/account.service';\nimport { Member } from 'src/app/_models/member';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from 'src/environments/environment';\nimport { take } from 'rxjs/operators';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() member: Member;\n  uploader: FileUploader;\n  hasBaseDropzoneOver = false;\n  baseUrl = environment.apiUrl;\n  user: User;\n\n  constructor(private accountService: AccountService,private membersService: MembersService) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\n  }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any) {\n    this.hasBaseDropzoneOver = e;\n  }\n\n  setMainPhoto(photo: Photo){\n    this.membersService.setMainPhoto(photo.id).subscribe(()=>{\n      this.user.photoUrl = photo.url;\n      this.accountService.setCurrentUser(this.user);\n      this.member.photoUrl = photo.url;\n      this.member.photos.forEach(p=>{\n        if(p.isMain) p.isMain = false;\n        if(p.id===photo.id) p.isMain = true;\n      })\n    })\n  }\n\n  deletePhoto(photo: Photo){\n    this.membersService.deletePhoto(photo.id).subscribe(()=>{\n      this.member.photos = this.member.photos.filter(x=> x.id !== photo.id);\n    })\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n      url: this.baseUrl + 'users/add-photo',\n      authToken: 'Bearer ' + this.user.token,\n      isHTML5: true,\n      allowedFileType: ['image'],\n      removeAfterUpload: true,\n      autoUpload: false,\n      maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    }\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const photo: Photo = JSON.parse(response);\n        this.member.photos.push(photo);\n        if(photo.isMain){\n          this.user.photoUrl = photo.url;\n          this.member.photoUrl = photo.url;\n          this.accountService.setCurrentUser(this.user);\n        }\n      }\n    }\n\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-2\" *ngFor=\"let photo of member.photos\">\n        <img src=\"{{photo.url}}\" alt=\"{{photo.url}}\" class=\"img-thumbnail p-1\">\n        <div class=\"text-center\">\n            <button [disabled]=\"photo.isMain\"\n                    (click)=\"setMainPhoto(photo)\" \n                    [ngClass]='photo.isMain ? \"btn-success active\" : \"btn-outline-success\"'  class=\"btn-btn-sm mt-2\">Main</button>\n            <button [disabled]=\"photo.isMain\"\n                    (click)=\"deletePhoto(photo)\" \n             class=\"btn-btn-sm btn-danger mt-2\"><i class=\"fa fa-trash\"></i></button>\n        </div>\n    </div>\n</div>\n<div class=\"row mt-3\">\n\n    <div class=\"col-md-3\">\n\n        <h3>Add Photos</h3>\n\n        <div ng2FileDrop [ngClass]=\"{'nv-file-over': hasBaseDropzoneOver}\" (fileOver)=\"fileOverBase($event)\"\n            [uploader]=\"uploader\" class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\n            <i class=\"fa fa-upload fa-3x\"></i>\n            Drop photos here\n        </div>\n\n\n        Multiple\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple /><br />\n\n        Single\n        <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\n    </div>\n\n    <div *ngIf=\"uploader?.queue?.length\" class=\"col-md-9\" style=\"margin-bottom: 40px\">\n\n        <h3>Upload queue</h3>\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n        <table class=\"table\">\n            <thead>\n                <tr>\n                    <th width=\"50%\">Name</th>\n                    <th>Size</th>\n                    <!-- <th>Progress</th>\n                    <th>Status</th>\n                    <th>Actions</th> -->\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let item of uploader.queue\">\n                    <td><strong>{{ item?.file?.name }}</strong></td>\n                    <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n                </tr>\n            </tbody>\n        </table>\n\n        <div>\n            <div>\n                Queue progress:\n                <div class=\"progress\" style=\"\">\n                    <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\n                </div>\n            </div>\n            <button type=\"button\" class=\"btn btn-success btn-s\" (click)=\"uploader.uploadAll()\"\n                [disabled]=\"!uploader.getNotUploadedItems().length\">\n                <span class=\"fa fa-upload\"></span> Upload all\n            </button>\n            <button type=\"button\" class=\"btn btn-warning btn-s\" (click)=\"uploader.cancelAll()\"\n                [disabled]=\"!uploader.isUploading\">\n                <span class=\"fa fa-ban\"></span> Cancel all\n            </button>\n            <button type=\"button\" class=\"btn btn-danger btn-s\" (click)=\"uploader.clearQueue()\"\n                [disabled]=\"!uploader.queue.length\">\n                <span class=\"fa fa-trash\"></span> Remove all\n            </button>\n        </div>\n\n    </div>\n\n</div>","import { ConfirmService } from './../_services/confirm.service';\nimport { MessageService } from './../_services/message.service';\nimport { Pagination } from './../_models/pagination';\nimport { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/message';\nimport { env } from 'process';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  container = 'Inbox';\n  pageNumber = 1;\n  pageSize = 5;\n  loading = false;\n\n  constructor(private messageService: MessageService, private confirmService: ConfirmService) { }\n\n  ngOnInit() {\n    this.loadMessages();\n  }\n\n  loadMessages() {\n    this.loading = true;\n    this.messageService.getMessages(this.pageNumber, this.pageSize, this.container).subscribe(response => {\n      this.messages = response.result;\n      this.pagination = response.pagination;\n      this.loading = false;\n    })\n  }\n\n  deleteMessage(id: number) {\n    this.confirmService.confirm(\"Confirm Delete Message\", \"This can not be undone\").subscribe(result => {\n      if (result) {\n        this.messageService.deleteMessage(id).subscribe(() => {\n          this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\n        })\n      }\n    })\n  }\n\n  pageChanged($event: any) {\n    if (this.pageNumber != $event.page) {\n      this.pageNumber = $event.page;\n      this.loadMessages();\n    }\n  }\n}\n","<div class=\"row mb-4\">\n    <div class=\"btn-group btn-messages\">\n        <button class=\"btn btn-primary col-1\" btnRadio='Unread' [(ngModel)]=\"container\" (click)=\"loadMessages()\">\n            <i class=\"fa fa-envelope\"></i> Unread\n        </button>\n        <button class=\"btn btn-primary col-1\" btnRadio='Inbox' [(ngModel)]=\"container\" (click)=\"loadMessages()\">\n            <i class=\"fa fa-envelope-open\"></i> Inbox\n        </button>\n        <button  class=\"btn btn-primary col-1\" btnRadio='Outbox' [(ngModel)]=\"container\" (click)=\"loadMessages()\">\n            <i class=\"fa fa-paper-plane\"></i> Outbox\n        </button>\n\n    </div>\n</div>\n\n<div class=\"row\" *ngIf=\"messages?.length ===0\">\n    <h3>No messages</h3>\n</div>\n\n<div [hidden]='loading' class=\"row\" *ngIf=\"messages?.length >0\">\n    <table class=\"table table-hover\" style=\"cursor: pointer;\">\n        <tr>\n            <th style=\"width: 40%;\">Message</th>\n            <th style=\"width: 20%;\">From / To</th>\n            <th style=\"width: 20%;\">Sent / Received</th>\n            <th style=\"width: 20%;\">Message</th>\n        </tr>\n        <tr *ngFor=\"let message of messages\" routerLink='{{container ===\"Outbox\" \n                    ?\"/members/\" + message.recipientUsername \n                    : \"/members/\"+ message.senderUsername}}' [queryParams]='{tab:3}'>\n            <td>{{message.content}}</td>\n            <td>\n                <div *ngIf=\"container === 'Outbox'\">\n                    <img class=\"img-circle rounded-circle mr-2\"\n                        src=\"{{message.recipientPhotoUrl || './assets/user.png'}}\" \n                        alt=\"{{message.recipientUsername}}\">\n                    <strong>{{message.recipientUsername | titlecase}}</strong>\n                </div>\n                <div *ngIf=\"container !== 'Outbox'\">\n                    <img class=\"img-circle rounded-circle mr-2\"\n                        src=\"{{message.senderPhotoUrl || './assets/user.png'}}\"\n                        alt=\"{{message.senderUsername}}\">\n                    <strong>{{message.senderUsername | titlecase}}</strong>\n                </div>\n            </td>\n            <td>{{message.messageSent | timeago}}</td>\n            <td>\n                <button class='btn' (click)=\"$event.stopPropagation()\" (click)=\"deleteMessage(message.id)\" style=\"background-color:deepskyblue\">Delete</button>\n            </td>\n        </tr>\n    </table>\n</div>\n\n<!--Pagination-->\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !loading\">\n    <pagination [boundaryLinks]=\"true\" [totalItems]=\"pagination.totalItems\" [itemsPerPage]=\"pagination.itemsPerPage\"\n        [(ngModel)]=\"pagination.currentPage\" (pageChanged)=\"pageChanged($event)\" nextText=\"&rsaquo;\" firstText=\"&laquo;\"\n        lastText=\"&raquo;\">\n    </pagination>\n</div>","import { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n  title: string;\n  message: string;\n  btnOktext: string;\n  btnCancelText: string;\n  result: boolean;\n\n\n  constructor(public bsModalRef: BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  confirm(){\n    this.result = true;\n    this.bsModalRef.hide();\n  }\n  decline(){\n    this.result = false;\n    this.bsModalRef.hide();\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">{{title}}</h4>\n</div>\n<div class=\"modal-body\">\n    {{message}}\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">\n        {{btnOktext}}\n    </button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">\n        {{btnCancelText}}\n    </button>\n</div>","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.css']\n})\nexport class RolesModalComponent implements OnInit {\n\n  @Input() updateSelectedRoles = new EventEmitter();\n  user: User;\n  roles: any[];\n\n  constructor(public bsModalRef: BsModalRef) {\n\n   }\n\n  ngOnInit() {    \n  }\n\n  updateRoles(){\n    this.updateSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Edit Roles For {{user.username}}</h4>\n    <button type=\"button\" class=\"btn-close close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n      <span aria-hidden=\"true\" class=\"visually-hidden\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form #rolesForm=\"ngForm\" id=\"roelsForm\">\n        <div class=\"form-check\" *ngFor=\"let role of roles\">\n            <input type=\"checkbox\"\n            class=\"form-check-input\"\n            [checked]=\"role.checked\"\n            value=\"role.name\"\n            (change)=\"role.checked = !role.checked\"\n            [disabled]=\"role.name === 'Admin' && user.username === 'admin'\">\n            <label>{{role.name}}</label>\n        </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">Submit</button>\n  </div>\n`","import { logging } from 'protractor';\nimport { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AccountService } from './../_services/account.service';\nimport { Observable } from 'rxjs';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {}\n\n  constructor(public accountService: AccountService,\n    private router: Router, private toastr: ToastrService) {\n  }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.accountService.login(this.model).subscribe(response => {\n      this.router.navigateByUrl('/members');\n    });\n  }\n\n  logout() {\n    this.accountService.logout();\n    this.router.navigateByUrl('/');\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-info\">\n    <div class=\"container\">\n        <a class=\"navbar-brand\" routerLinkActive='active' routerLink='/'>Maitri.Com</a>\n\n        <!-- Commented Responsive Code -->\n        <!-- <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\"\n            aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button> -->\n        <!-- <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\"> -->            \n        <ul class=\"navbar-nav mr-auto\">\n            <ng-container *ngIf=\"accountService.currentUser$ | async\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLinkActive='active' routerLink='/members'>Matches </a>                \n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLinkActive='active' routerLink='/lists'>Request</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLinkActive='active' routerLink='/messages'>Inbox</a>                \n                </li>\n                <li class=\"nav-item\"  *HasRole='[\"Admin\",\"Moderator\"]'>\n                    <a class=\"nav-link\" routerLinkActive='active' routerLink='/admin'>Admin</a>                \n                </li>          \n            </ng-container>  \n            <!-- <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLinkActive='active' routerLink='/erros'>Errors</a>                \n            </li>             -->\n        </ul>\n        <div class=\"dropdown\" *ngIf=\"(accountService.currentUser$ | async) as user\" dropdown>\n            <img src=\"{{user.photoUrl || './assets/user.png'}}\" alt=\"{{user.username}}\">\n            <a  class=\"dropdown-toggle text-light ml-2\" dropdownToggle>Welcome {{user.knownAs || user.username | titlecase}}</a>\n            <div class=\"dropdown-menu mt-3\" *dropdownMenu>\n                <a routerLink=\"/member/edit\" class=\"dropdown-item\">Edit Profile</a>\n                <div  class=\"dropdown-divider\"></div>\n                <a  class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\n            </div>\n        </div>\n\n        <form *ngIf=\"(accountService.currentUser$ | async) === null\"  #loginForm=\"ngForm\" class=\"form-inline mt-2 mt-md-0\" (ngSubmit)=\"login()\" autocomplete=\"off\">\n            <input\n             name=\"username\"\n             [(ngModel)]=\"model.username\"\n             class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Username\">\n            <input \n            name=\"passowrd\"            \n            [(ngModel)]=\"model.password\"\n            class=\"form-control mr-sm-2\" type=\"password\" placeholder=\"Password\">\n            <button class=\"btn btn-primary my-2 my-sm-0\" type=\"submit\">Login</button>\n        </form>\n        <!-- </div> -->\n    </div>\n</nav>","import { Router } from '@angular/router';\nimport { AccountService } from './../_services/account.service';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  registerForm: FormGroup;\n  maxDate: Date;\n  validationErrors: string[] = [];\n\n  constructor(private accountService: AccountService, private toastr: ToastrService,\n    private fb: FormBuilder, private router: Router) { }\n\n  ngOnInit() {\n    this.initializeForm();\n    this.maxDate = new Date();\n    this.maxDate.setFullYear(this.maxDate.getFullYear()-18);\n  }\n\n  initializeForm() {\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4),\n                  Validators.maxLength(8)]],\n      confirmPassword: ['', [Validators.required, this.matchValues('password')]]\n    })\n    this.registerForm.controls.password.valueChanges.subscribe(() => {\n      this.registerForm.controls.confirmPassword.updateValueAndValidity();\n    })\n  }\n\n  matchValues(matchTo: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      return control?.value === control?.parent?.controls[matchTo].value\n        ? null : { isMatching: true }\n    }\n\n  }\n\n  register() {\n    this.accountService.register(this.registerForm.value).subscribe(response => {\n      this.router.navigateByUrl('/members');     \n    },error => {      \n      this.validationErrors = error;\n    })\n  }\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n\n}\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"registerForm.valid && register()\" autocomplete=\"off\">\n    <h2 class=\"text-center text-primary\">Sign up</h2>\n    <hr>\n    <div class=\"control-label\" stayle=\"margin-right:10px;\">\n        <label class=\"control-label\"></label>\n        <label class=\"radio-inline\">\n            <input type=\"radio\" value='male' formControlName='gender'> Male\n        </label>\n        <label class=\"radio-inline\">\n            <input class=\"ml-3\" type=\"radio\" value='female' formControlName='gender'> Female\n        </label>\n    </div>\n    <text-input [formControl]='registerForm.controls[\"username\"]' [label]='\"Username\"'></text-input>\n    <text-input [formControl]='registerForm.controls[\"knownAs\"]' [label]='\"knownAs\"'></text-input>\n    <date-input [formControl]='registerForm.controls[\"dateOfBirth\"]' [maxDate]='maxDate' [label]='\"dateOfBirth\"'></date-input>\n    <text-input [formControl]='registerForm.controls[\"city\"]' [label]='\"city\"'></text-input>\n    <text-input [formControl]='registerForm.controls[\"country\"]' [label]='\"country\"'></text-input>\n    <text-input [formControl]='registerForm.controls[\"password\"]' [label]='\"Password\"' [type]='\"Password\"'></text-input>\n    <text-input [formControl]='registerForm.controls[\"confirmPassword\"]' [label]='\"Confirm Password\"' [type]='\"Password\"'>\n    </text-input>\n\n    <div class=\"row\" *ngIf=\"validationErrors.length > 0\">\n        <ur class=\"text-danger\">\n            <li *ngFor=\"let error of validationErrors\"> \n                {{error}}\n            </li>\n        </ur>\n    </div>\n\n    <div class=\"form-group text-center\">\n        <button [disabled]=\"registerForm.invalid\" class=\"btn btn-success mr-2\" type=\"submit\">Register</button>\n        <button class=\"btn btn-default mr-2\" (click)=\"cancel()\" type=\"submit\">Cancel</button>\n    </div>\n</form>\n<!-- <p>Form Value: {{this.registerForm.value | json }} </p>\n<p>Form Status: {{this.registerForm.status | json }} </p> -->","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:'https://localhost:5001/api/',\n  hubUrl: 'https://localhost:5001/hubs/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}